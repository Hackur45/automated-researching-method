//What we are doing?

We are making research document maker. The central Idea is to eliminate all the human efforts and automate the process of researching.


// Approach 

i.e   Get the topic --->  Get the Related Questions which can make significant Questions to contradict or support our idea ---> Why that is necessary ----> To give knowledge to our research ----> To come to conclusion


// Requirements

            Techniques Needed : 1) Web scraping 
                                2) Automated Web searching using selenium
                                3) RNN To generate relevent questions for web searching
                                4) Sentiment Analysis to determine the necessity of the question
                                5) Provide all web scraped data to the LLM/AI.
                                6) Send This data to fronted
                                7) API routings

            Technologies Required: 1) React + Tailwind (fronted)
                                   2) Flask For backend
                                   3) Selenium in python
                                   4) NLTK (Natural language toolkit)
                                   5) Gemini-flash-1.5
                                   6) .md / LateX


// Technical Approach

        //Frontend
            1. Basic Implementation of searchBox.
            2. User will provide some stream of tokens in searchBox.
            3. Send the tokens to backend for processing.
            4. Generate some relevent question on it.
            5. Google those question, collect pdf, mediums, docs, all free resources related it.
            6. At this phase we have massive data for our Basic Tokens recived from user.
            7. Time to send that scrapped data to AI. AI with those knowledge will come to one conclusion.
            8. Send that data to fronted show it on Frontend(also keep it mutable)
            8. Generate one .md/ human redable  file ---->  so that user can download it.


// Conclusion


        1. This will generate one document/redable things as output.
        2. Though the whole application will not be very efficent so that it will generate very refined content. It could be the base for this research topic.

// Further Optimizations

        1. We need to make that RNN model to generate relevent questions.
        2. High computations Required
        3. Contenarization
        4. Plag free

//Current Limitations

        Point mentioned 1,2,3,4 in further Optimizations are basically out current limitations.



// Happy coding !


-Last edited 
15:43
08-11-24
MG



